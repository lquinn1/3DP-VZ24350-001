#####################################################################################
# Klipper Printer.cfg
# This file contains common pin mappings for the BigTreeTech Octopus V1.1.
# To use this config, the firmware should be compiled for the
# STM32F446 with a "32KiB bootloader" and a "12MHz crystal" clock reference.
#
# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.
#
# Author: Luke Quinn
# Date: 1/2/25
# Version: 2.2
# Voron 2.4r2 BTT Octopus v1.1, TMC2209 v1.2 UART, Vittali Tap Probe, StealthBurner, 12864 BTT NeoPixel Display, EBB2209 CANbus, U2C
#####################################################################################
# See docs/Config_Reference.md for a description of parameters.

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths							[mcu] section
## Z Endstop Switch location			[safe_z_home] section
## Homing end position					[gcode_macro G32] section
## Z Endstop Switch  offset for Z0		[stepper_z] section
## Probe points							[quad_gantry_level] section
## Min & Max gantry corner postions		[quad_gantry_level] section
## PID tune								[extruder] and [heater_bed] sections
## Fine tune E steps					[extruder] section

#####################################################################
# 	MCU Configuration
#####################################################################
[mcu]
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
#serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_0E002B00135053424E363620-if00
serial: /dev/ttyAMA0
restart_method: command
##--------------------------------------------------------------------

[mcu EBBCan]
##  [E in Extruder] - E Motor
##--------------------------------------------------------------------
##serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid: ecea02734a02
#canbus_uuid: fa95a4a89942 SPARE
##--------------------------------------------------------------------

#####################################################################
# 	Printer Wide Configuration
#####################################################################
[printer]
kinematics: corexy
max_velocity: 325  
max_accel: 3500           #Max 4000
max_z_velocity: 50 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
#square_corner_velocity: 5.0


[virtual_sdcard]
path: ~/printer_data/gcodes

[display_status]

[exclude_object]

[idle_timeout]
gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
  TURN_OFF_HEATERS
  M84
timeout: 7200
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

[force_move]
enable_force_move: True
#   Set to true to enable FORCE_MOVE and SET_KINEMATIC_POSITION
#   extended G-Code commands. The default is false.

[pause_resume]
#recover_velocity: 50.
#   When capture/restore is enabled, the speed at which to return to
#   the captured position (in mm/s). Default is 50.0 mm/s.

[gcode_arcs]
#resolution: 1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

[respond]
#default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".
[firmware_retraction]
retract_length: 0.5
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 35
#   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
#unretract_speed: 10
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

#####################################################################
# 	MCU Temperatures
#####################################################################
[temperature_sensor Octopus]
sensor_type: temperature_mcu

[temperature_sensor RasberryPi]
sensor_type: temperature_host
sensor_path: /sys/class/thermal/thermal_zone0/temp

[temperature_sensor SB2209]
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2

###################################################################
# Enclosure Temp Sensor Section
###################################################################

[temperature_sensor enclosure_temp]
sensor_type: Generic 3950
sensor_pin: PF4
min_temp: -100
max_temp: 100
gcode_id: C

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on MOTOR0(B Motor)
[stepper_x]
step_pin: PF13
dir_pin: !PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: EBBCan: PB6
position_min: 0
position_endstop: 350
position_max: 355
homing_speed: 85   #Max 100
homing_retract_dist: 15

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: True
run_current: 1.5

[autotune_tmc stepper_x]
motor: ldo-42sth48-2004mah
tuning_goal: performance

## Y Stepper on MOTOR1 (A Motor)
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
#endstop_pin: tmc2209_stepper_y:virtual_endstop
endstop_pin: PG6
position_min: -8
position_endstop: 350
position_max: 355
homing_speed: 85  #Max 100
homing_retract_dist: 15

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: True
run_current: 1.5

[autotune_tmc stepper_y]
motor: ldo-42sth48-2004mah
tuning_goal: performance
 
#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR2_1
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: probe:z_virtual_endstop
position_max: 340
position_min: -15
homing_speed: 3
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: true
run_current: 1
sense_resistor: 0.110
#stealthchop_threshold: 0

[autotune_tmc stepper_z]
motor: ldo-42sth48-2004ac
tuning_goal: performance

##	Z1 Stepper - Rear Left on MOTOR3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: true
run_current: 1
#stealthchop_threshold: 0

[autotune_tmc stepper_z1]
motor: ldo-42sth48-2004ac
tuning_goal: performance

##	Z2 Stepper - Rear Right on MOTOR4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: true
run_current: 1
#stealthchop_threshold: 0

[autotune_tmc stepper_z2]
motor: ldo-42sth48-2004ac
tuning_goal: performance

##	Z3 Stepper - Front Right on MOTOR5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: true
run_current: 1
#stealthchop_threshold: 0

[autotune_tmc stepper_z3]
motor: ldo-42sth48-2004ac
tuning_goal: performance

#####################################################################
# 	Extruder
#####################################################################
[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
##	Update value below when you perform extruder calibration
##	If you ask for 100mm of filament, but in reality it is 98mm:
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
##rotation_distance: 22.8150248	#Bondtech 5mm Drive Gears
microsteps: 32
rotation_distance: 22.8150248
gear_ratio: 50:10				#BMG Gear Ratio
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
max_extrude_cross_section: 50.0
max_extrude_only_distance: 1000
heater_pin: EBBCan: PB13
#sensor_type: EPCOS 100K B57560G104F
#sensor_pin: EBBCan: PA3
#control: pid
min_temp: 0
max_temp: 300
min_extrude_temp: 160
#If switch to P100-P1000 2 wire use:
sensor_type: MAX31865
sensor_pin: EBBCan: PA4
spi_bus: spi1
rtd_nominal_r: 100
rtd_reference_r: 430
rtd_num_of_wires: 2
##	Try to keep pressure_advance below 1.0 (Calibrate for filament type using Ellis new meth.)
#***Moved to Filament profile in slicer***
#pressure_advance: 0.000 #PA Off
#pressure_advance: 0.023 #ABS
#pressure_advance: 0.045 #ASA
#pressure_advance: 0.045 #PETG
#pressure_advance: 0.015 #PLA
#pressure_advance: 0.031 #ABS
[tmc2209 extruder]
uart_pin: EBBCan: PA15
run_current: 0.650
#stealthchop_threshold: 0

[autotune_tmc extruder]
motor: moons-cse14hra1l410a
#motor: ldo-36sth20-1004ahg
tuning_goal: performance

#####################################################################
# 	Bed Heater
#####################################################################
[heater_bed]
##	SSR Pin - BED_OUT
heater_pin: PA2
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PF3
max_power: 1.0
min_temp: 0
max_temp: 120
#pwm_cycle_time: 0.02227 # 44.9Hz
pwm_cycle_time: 0.02088 # 47.9Hz


#####################################################################
# 	Probe
#####################################################################
[probe]
pin: ^EBBCan: PB5
x_offset: 0
y_offset: 0
#z_offset: 0
speed: 3.0
lift_speed:5.0
samples: 3
samples_result: average
sample_retract_dist: 2.0
samples_tolerance: 0.01
samples_tolerance_retries: 3
#lift_speed: 100
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
    
[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.

gantry_corners:
	-60,-10
	410,420
	#Probe points
points:
	35,25
	35,310
	320,310
	320,25
speed: 100
horizontal_move_z: 5
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

[bed_mesh]
speed: 200
horizontal_move_z: 5
mesh_min: 40,40
mesh_max: 310, 310
probe_count: 6,6
mesh_pps: 2,2

#####################################################################
# 	Input Shaper
#####################################################################
[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: z,-y,x

[input_shaper]
shaper_freq_x: 58.4
shaper_type_x: mzv
shaper_freq_y: 40
shaper_type_y: mzv
damping_ratio_x: 0.049
damping_ratio_y: 0.060

[resonance_tester]
accel_chip: adxl345
probe_points:
    175,175,20  # an example

[shaketune]
 result_folder: ~/printer_data/config/ShakeTune_results

 number_of_results_to_keep: 10
 show_macros_in_webui: True

#####################################################################
# 	Fan Control
#####################################################################

[fan]
##	Print Cooling Fan
pin: EBBCan: PA1
max_power: 1.0
kick_start_time: 0.1
off_below: 0.0

[heater_fan hotend_fan]
pin: EBBCan: PA0
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[heater_fan bed_fan]
##	Controller fan - CNC_FAN2
pin: PA8
kick_start_time: 0.5
heater: heater_bed
heater_temp: 70.0
fan_speed: 1.0

[heater_fan exhaust_fan]
#	Exhaust fan - CNC_FAN3
pin: PD13
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
heater: heater_bed
heater_temp: 60
fan_speed: 1.0

[controller_fan Electronics_Fan1] 
#	Electronics Case Fan - CNC_FAN4
pin: PD14
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0

[controller_fan Electronics_Fan2] 
#	Electronics Case Fan - CNC_FAN5
pin: PD15
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0

#####################################################################
# 	LED Control
#####################################################################

[output_pin caselight]
# Chamber Lighting - HE1 Connector (Optional)
#To be replaced by neopixels and then this may be used for chamber heater
pin: PA3
pwm:true
shutdown_value: 0
value:1
cycle_time: 0.01

[neopixel my_neopixel]
pin: PB0
chain_count: 106
color_order: GRB
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0

#####################################################################
# 	Includes
#####################################################################
[include nozzle_scrub.cfg]
[include stealthburner_leds.cfg]
#[include Line_Purge.cfg]
[include print_start.cfg]
[include K-ShakeTune/*.cfg]
[include timelapse.cfg]
[include KAMP_Settings.cfg]
[include ./KAMP/Adaptive_Meshing.cfg]       # Include to enable adaptive meshing configuration.
#[include ./KAMP/Line_Purge.cfg]             # Include to enable adaptive line purging configuration.
#[include ./KAMP/Voron_Purge.cfg]            # Include to enable adaptive Voron logo purging configuration.
#[include ./KAMP/Smart_Park.cfg]             # Include to enable the Smart Park function, which parks the printhead near the print area for final heating.
[include AFC/*.cfg]
#####################################################################
# 	Macros
#####################################################################
[gcode_macro Lights_OFF]
gcode:
	#SET_LED LED=btt_mini12864 RED=0 GREEN=0 BLUE=0 TRANSMIT=0
    SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0 SYNC=0

[gcode_macro Lights_ON]
gcode:

    SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1 SYNC=0

[gcode_macro Probe_CAL]
gcode:
	PROBE_CALIBRATE

[gcode_macro PID_CAL_Hotend]
gcode:
    {% set hetemp = params.K|float %}
	PID_CALIBRATE HEATER=extruder TARGET={hetemp}

[gcode_macro PID_CAL_Bed]
gcode:
    {% set bdtemp = params.K|float %}
	PID_CALIBRATE HEATER=heater_bed TARGET={bdtemp}

[gcode_macro M900]
gcode:
	# Parameters
	{% set pa = params.K|float %}
	
	SET_PRESSURE_ADVANCE ADVANCE={pa}

######################################################################
## Filament Change                                                  ##
######################################################################
# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 130mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "SWAP_RESUME" gcode.
[gcode_macro M600]
########### Gcode ############
gcode:
  {% set X = params.X|default(printer.configfile.config["stepper_x"]["position_endstop"]|string)|int %}
  {% set Y = params.Y|default(printer.configfile.config["stepper_y"]["position_endstop"]|string)|int %}
  {% set Z = params.Z|default(10)|int %}
  {% set E = params.E|default(-20)|int %}
  {% set tool = params.tool|default(0)|int %}

        SAVE_GCODE_STATE NAME=M600_state
        PAUSE
        G91
        G1 E-5 F4000
        G1 Z{Z}
        G90
        G1 X{X} Y{Y} F3000        ;park position
        G0 E10 F500                ;extrude filament to get better blob on end
        G0 E{E} F600             ;retract additional filament to move out of melt zone
        G92 E0
        #SET_FILAMENT_SENSOR SENSOR=e{TOOL}_runout ENABLE=0

#    Use this command resume during a mid print filament swap (DONT USE OCTO/MAINSAIL/DWC RESUME)
[gcode_macro SWAP_RESUME] 
gcode:
    RESTORE_GCODE_STATE NAME=M600_state
    #SET_FILAMENT_SENSOR SENSOR=e0_runout ENABLE=1
    #SET_FILAMENT_SENSOR SENSOR=e1_runout ENABLE=1
    resume


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(230) %}      #edit to your park position
    {% set y = params.Y|default(230) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}
	
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}
	
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    BT_TOOL_UNLOAD
    AFC_BRUSH
	TURN_OFF_HEATERS
	CANCEL_PRINT_BASE
	SET_LED LED=my_neopixel RED=1 GREEN=0 BLUE=0 SYNC=0

	M220 S100 ; Reset Speed factor override percentage to default (100%)
	M221 S100 ; Reset Extrude factor override percentage to default (100%)
	G91 ; Set coordinates to relative
	{% if printer.extruder.temperature >= 170 %}
      G1 F1800 E-1 ; Retract filament 3 mm to prevent oozing
	{% endif %}

   #if all axis are homed, lift the hotend to leave room for hot filament to ooze and to keep it clear of the bed.
	{% if printer.toolhead.homed_axes == "xyz" %}
      G1 F6000 Z10 ; Move Z Axis up 10 mm to allow filament ooze freely
      G90 ; Set coordinates to absolute
      G1 X231 Y344 F1000             ; Move Heat Bed to the back for easy print removal 
      #M84 ; Disable stepper motors
	{% endif %}

   #set part fan speed to zero.
	M106 S0

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 F1800 E-1                   ; Retract filament 3 mm to prevent oozing
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    BT_TOOL_UNLOAD
    AFC_BRUSH
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z10 F6000                   ; move nozzle up 10mm
    G90                            ; absolute positioning
    G1 X231 Y344 F1000             ; Move Heat Bed to the back for easy print removal
    #BED_MESH_CLEAR
	SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1 SYNC=0
    G4 P2000
	SET_LED LED=my_neopixel RED=0 GREEN=1 BLUE=0 SYNC=0
    G4 P2000
	SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1 SYNC=0
    G4 P2000
	SET_LED LED=my_neopixel RED=0 GREEN=1 BLUE=0 SYNC=0
    G4 P2000
	SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1 SYNC=0
    G4 P2000
    SET_LED LED=my_neopixel RED=0 GREEN=1 BLUE=0 SYNC=0

# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10
[gcode_macro TEST_SPEED]
gcode:
	# Speed
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	# Iterations
	{% set iterations = params.ITERATIONS|default(5)|int %}
	# Acceleration
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	# Bounding box (in case the machine min/maxes are not perfect)
	{% set bound = params.BOUND|default(20)|int %}
	
	# Set speed test bounds (machine minimum/maximum positions, inset by the bounding box)
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}

	# Save current gcode state (absolute/relative, etc)
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	# Absolute positioning
	G90
	
	# Set new limits
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

	# Home and get position for comparison later:
		G28
		# QGL if not already QGLd (only if QGL section exists in config)
		{% if printer.configfile.settings.quad_gantry_level %}
			{% if printer.quad_gantry_level.applied == False %}
				QUAD_GANTRY_LEVEL
				G28 Z
			{% endif %}
		{% endif %}	
		G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
		G4 P1000 
		GET_POSITION

	# Go to starting position
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed * 60}

	{% for i in range(iterations) %}
		# Diagonals
		G0 X{x_min} Y{y_min} F{speed * 60}
		G0 X{x_max} Y{y_max} F{speed * 60}
		G0 X{x_min} Y{y_min} F{speed * 60}
		G0 X{x_max} Y{y_min} F{speed * 60}
		G0 X{x_min} Y{y_max} F{speed * 60}
		G0 X{x_max} Y{y_min} F{speed * 60}
		
		# Box
		G0 X{x_min} Y{y_min} F{speed * 60}
		G0 X{x_min} Y{y_max} F{speed * 60}
		G0 X{x_max} Y{y_max} F{speed * 60}
		G0 X{x_max} Y{y_min} F{speed * 60}
	{% endfor %}

	# Restore max speed/accel/accel_to_decel to their configured values
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

	# Re-home XY and get position again for comparison:
		G28 X Y
		# Go to XY home positions (in case your homing override leaves it elsewhere)
		G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
		G4 P1000 
		GET_POSITION

	# Restore previous gcode state (absolute/relative, etc)
	RESTORE_GCODE_STATE NAME=TEST_SPEED
[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
    G4 P2000
    # Home
    G28 X
    # Move away
    G91
    G1 X-175 F2400
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P2000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
    G4 P2000
    # Home
    G28 Y
    # Move away
    G91
    G1 Y-175 F2400

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P2000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
[homing_override]
axes: xyz
gcode:
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    #G1 Z10
    G28 Z
    G1 Z20
  {% endif %}

[gcode_macro UNSAFE_RAISE_TOOLHEAD]
description: Raise the toolhead 20mm without homing
gcode:
  G90
  SET_KINEMATIC_POSITION Z=0
  G0 Z20 F600
  M84

[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}
  
[gcode_macro LOAD_FILAMENT]
variable_load_distance:  80
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  80
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# pid_kp = 26.230
#*# pid_ki = 3.179
#*# pid_kd = 54.100
#*# control = pid
#*#
#*# [heater_bed]
#*# pid_kp = 55.713
#*# pid_ki = 2.336
#*# pid_kd = 332.188
#*# control = pid
#*#
#*# [probe]
#*# z_offset = -1.410
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.032917, 0.045833, 0.032083
#*# 	  0.033750, 0.039167, 0.031250
#*# 	  0.040417, 0.061667, 0.042083
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 133.921
#*# max_x = 216.12099999999998
#*# min_y = 145.158
#*# max_y = 204.85799999999998
